{"ast":null,"code":"var _jsxFileName = \"D:\\\\software\\\\react\\\\mini-project\\\\miniproject\\\\src\\\\ExamMaster\\\\QuestionForTopicView.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport '../ExamMaster/QuestionForTopicView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionForTopicView = () => {\n  _s();\n  const params = useParams();\n  const topicId = params.topicId;\n  const examId = params.examId;\n  console.log(\"ExamId...>\", examId);\n  console.log(\"param exam id...>\", topicId);\n  const [questionData, setQuestionData] = useState([]);\n  const [topicName, setTopicName] = useState(\"\");\n  const [questionId, setQuestionId] = useState(\"\");\n  const navigate = useNavigate();\n  var topicid;\n  async function QuestionDetails() {\n    console.log(\"QuestionForTopicView  is called....\");\n    // console.log(topicId);\n    const map = {\n      topicId: topicId\n    };\n    const response = await fetch(\"https://localhost:8443/onlineexam/control/viewQuestions\", {\n      method: \"POST\",\n      credentials: \"include\",\n      body: JSON.stringify(map),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    });\n    const result = await response.json();\n    // console.log(result);\n    const myobj = result.resultMap.listQuestions;\n    const topicname = result.resultMap.topicName;\n    let resultvalue = {\n      myobj: myobj,\n      topicname: topicname\n    };\n    // console.log(\"result\", result.resultMap.listQuestions);\n    // console.log(\"second result,\", result.resultMap.topicName);\n    const ouput_questions = result.resultMap.listQuestions;\n    if (ouput_questions === null && ouput_questions === \"\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"There is no data to show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this);\n    } else {\n      setQuestionData([...ouput_questions]);\n      console.log(ouput_questions);\n    }\n\n    // // setQuestionData([ ...resultvalue]);\n    // console.log(\"result value......\", resultvalue);\n    // console.log(\"question data....\", questionData);\n    setTopicName(result.resultMap.topicName);\n    // topicid=result.resultMap.listQuestions.topicId;\n    // console.log(\"My topic Id...>\",topicid);\n    // console.log(\"Topic Name\",result.resultMap.topicName);\n    // console.log(\"My result....\", result);\n    // console.log(\"***********************************************\");\n    // console.log(\"NAREN - MASTER\");\n  }\n  ;\n  useEffect(() => {\n    QuestionDetails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: topicName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: questionData ? questionData.map((obj, value) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Question: \", obj.questionDetail]\n            }, value, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary btn1\",\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 19\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionForTopicView, \"ea+HoIypYPI8dXEVGbRYzMR+ebM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuestionForTopicView;\nexport default QuestionForTopicView;\nvar _c;\n$RefreshReg$(_c, \"QuestionForTopicView\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","QuestionForTopicView","_s","params","topicId","examId","console","log","questionData","setQuestionData","topicName","setTopicName","questionId","setQuestionId","navigate","topicid","QuestionDetails","map","response","fetch","method","credentials","body","JSON","stringify","headers","result","json","myobj","resultMap","listQuestions","topicname","resultvalue","ouput_questions","children","fileName","_jsxFileName","lineNumber","columnNumber","className","obj","value","questionDetail","_c","$RefreshReg$"],"sources":["D:/software/react/mini-project/miniproject/src/ExamMaster/QuestionForTopicView.js"],"sourcesContent":["import React from 'react'\r\nimport { useState,useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport '../ExamMaster/QuestionForTopicView.css';\r\n\r\n\r\nconst QuestionForTopicView = () => {\r\n  const params=useParams();\r\n  const topicId = params.topicId;\r\n  const examId=params.examId;\r\n  console.log(\"ExamId...>\",examId);\r\n  console.log(\"param exam id...>\",topicId);\r\n    const [questionData, setQuestionData] = useState([]);\r\n    const [topicName, setTopicName] = useState(\"\");\r\n    const [questionId, setQuestionId] = useState(\"\");\r\n  \r\n    const navigate=useNavigate();\r\n\r\n    var topicid;\r\n\r\n\r\n\r\n  async function QuestionDetails()  {\r\n        console.log(\"QuestionForTopicView  is called....\");\r\n        // console.log(topicId);\r\n        const map = {\r\n          topicId: topicId,\r\n        };\r\n    \r\n        const response = await fetch(\r\n          \"https://localhost:8443/onlineexam/control/viewQuestions\",\r\n          {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            body: JSON.stringify(map),\r\n            headers: {\r\n              \"Content-type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n    \r\n        const result = await response.json();\r\n        // console.log(result);\r\n        const myobj = result.resultMap.listQuestions;\r\n        const topicname = result.resultMap.topicName;\r\n        let resultvalue = {\r\n          myobj: myobj,\r\n          topicname: topicname,\r\n        };\r\n        // console.log(\"result\", result.resultMap.listQuestions);\r\n        // console.log(\"second result,\", result.resultMap.topicName);\r\n        const ouput_questions=result.resultMap.listQuestions;\r\n        if(ouput_questions === null && ouput_questions === \"\"){\r\n            return(\r\n              <div>\r\n                <p>There is no data to show</p>\r\n              </div>\r\n            )\r\n        }\r\n        else{\r\n          setQuestionData([...ouput_questions]);\r\n          console.log(ouput_questions);\r\n        }\r\n       \r\n       \r\n        // // setQuestionData([ ...resultvalue]);\r\n        // console.log(\"result value......\", resultvalue);\r\n        // console.log(\"question data....\", questionData);\r\n        setTopicName(result.resultMap.topicName);\r\n        // topicid=result.resultMap.listQuestions.topicId;\r\n        // console.log(\"My topic Id...>\",topicid);\r\n        // console.log(\"Topic Name\",result.resultMap.topicName);\r\n        // console.log(\"My result....\", result);\r\n        // console.log(\"***********************************************\");\r\n        // console.log(\"NAREN - MASTER\");\r\n      };\r\n      useEffect(() => {\r\n        QuestionDetails();\r\n      }, []);\r\n  return (\r\n    <div className='row'>\r\n\r\n      <h1>{topicName}</h1>\r\n         \r\n\r\n\r\n          <div className='col-12'>\r\n          {questionData ? (\r\n              questionData.map((obj, value) => {\r\n            \r\n                return (\r\n                  <div>\r\n                  <div className='col-8' >\r\n                    <div  key={value}>Question: {obj.questionDetail}</div>\r\n\r\n                  </div>\r\n                  <div className='col-4'>\r\n                  <button className=\"btn btn-primary btn1\" >View Details</button>\r\n                <button className=\"btn btn-danger\">Delete</button>\r\n         \r\n          {/* <button className=\"btn btn-primary\" onClick={()=>navigate(`/admin/updateExam/examdetails/${examId}`)}>Back</button> */}\r\n               </div>\r\n                  </div>\r\n                );\r\n              })\r\n            ) : (\r\n              <p>No data</p>\r\n              )}\r\n             \r\n          </div>\r\n         \r\n         \r\n          {/* onClick={()=>navigate(`/admin/updateExam/examdetails/question-topicView/view-questions/${obj.questionId}/${topicName}/${examId}`)} */}\r\n      </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default QuestionForTopicView\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}